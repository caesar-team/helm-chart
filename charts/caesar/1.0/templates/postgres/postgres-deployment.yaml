apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.postgres.name | quote }}
  labels:
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    component: "{{ .Values.postgres.name }}"
    heritage: "{{ .Release.Service }}"
    release: "{{ .Release.Name }}"
spec:
  selector:
    matchLabels:
      app: "postgres"
      component: "{{ .Values.postgres.name }}"
      release: "{{ .Release.Name }}"
  template:
    metadata:
      labels:
        app: "postgres"
        component: "{{ .Values.postgres.name }}"
        release: "{{ .Release.Name }}"
    spec:
      containers:
      - envFrom:
        - secretRef:
            name: postgres
            optional: false
        image: "{{ .Values.postgres.image.repository }}:{{ .Values.postgres.image.tag }}"
        imagePullPolicy: "{{ .Values.postgres.image.pullPolicy }}"
        name: postgres
        volumeMounts:
        - mountPath: /var/lib/postgresql/data
          name: postgres
      dnsPolicy: ClusterFirst
      imagePullSecrets:
      - name: dockerhub
      - name: dockerhub
      initContainers:
      - args:
        - -rf
        - /var/empty/lost+found
        command:
        - rm
        image: postgres:9.6
        imagePullPolicy: IfNotPresent
        name: init
        volumeMounts:
        - mountPath: /var/empty
          name: postgres
      volumes:
      - name: postgres
        persistentVolumeClaim:
          claimName: postgres
