apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: rabbitmq
  namespace: {{ .Values.namespace }}
  labels:
    app.kubernetes.io/name: {{ include "caesar.name" . }}
    helm.sh/chart: {{ include "caesar.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  selector:
    matchLabels:
      app: rabbitmq
  serviceName: "rabbitmq"
  replicas: 1
  template:
    metadata:
      namespace: {{ .Values.namespace }}
      labels:
        app.kubernetes.io/name: {{ include "caesar.name" . }}
        helm.sh/chart: {{ include "caesar.chart" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/managed-by: {{ .Release.Service }}
        app: rabbitmq
    spec:
      containers:
      - name: rabbitmq
        image: rabbitmq:3-alpine
        envFrom:
        - configMapRef:
            name: rabbitmq-config
        - secretRef:
            name: rabbitmq-secret
        ports:
        - containerPort: 5672
          name: rabbitmq-port
        volumeMounts:
        - name: rabbitmq-data
          mountPath: /var/lib/rabbitmq
  volumeClaimTemplates:
  - metadata:
      name: rabbitmq-data
      labels:
        app.kubernetes.io/name: {{ include "caesar.name" . }}
        helm.sh/chart: {{ include "caesar.chart" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/managed-by: {{ .Release.Service }}
        app: rabbitmq
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: {{ default "do-block-storage" .Values.storageClassName }}
      resources:
        requests:
          storage: 1Gi