{{ if .Values.backuper.enable }}
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: backuper
  namespace: {{ .Values.namespace }}
  labels:
    app.kubernetes.io/name: {{ include "caesar.name" . }}
    helm.sh/chart: {{ include "caesar.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    keel.sh/policy: all
spec:
  failedJobsHistoryLimit: 10
  jobTemplate:
    metadata:
      creationTimestamp: null
    spec:
      activeDeadlineSeconds: 600
      backoffLimit: 3
      completions: 1
      parallelism: 1
      template:
        spec:
          containers:
          - args:
            - /pgsql-backup.sh
            command:
            - /bin/sh
            env:
            - name: TARGET_DATABASE_NAMES
              valueFrom:
                secretKeyRef:
                  key: POSTGRES_DB
                  name: postgres-secret
                  optional: false
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: POSTGRES_PASSWORD
                  name: postgres-secret
                  optional: false
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  key: POSTGRES_USER
                  name: postgres-secret
                  optional: false
            envFrom:
            - secretRef:
                name: backuper-secret
                optional: false
            - configMapRef:
                name: backuper-config
                optional: false
            - secretRef:
                name: aws-s3-secret
                optional: false
            image: "caesarteam/aws-database-backup:{{ .Values.backuper.branch }}"
            imagePullPolicy: Always
            name: backuper
            resources: {}
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
          dnsPolicy: ClusterFirst
          restartPolicy: Never
          schedulerName: default-scheduler
          securityContext: {}
          terminationGracePeriodSeconds: 30
  schedule: 0 01 * * *
  successfulJobsHistoryLimit: 10
  suspend: false
{{ end }}